复杂度分析：分析代码的执行空间与时间耗时，不需要通过执行代码既可观测出大概结构

大 O 复杂度表示法

时间复杂度分析
1.只关注循环执行次数最多的代码
2.加法法则：总复杂度=量级最大的那段代码复杂度
3.乘法法则：嵌套代码复杂度=嵌套内外代码复杂度乘积

几种常见的复杂度
常量阶：O(1) 最常见的，一行一行的代码，没有循环（常数循环也是O(1)），不论代码多少行，只要有具体行数，不论10000，1000000都是O(1)
对数阶：O(logn)  2的n次幂=a，记做n=log2a，n是以2为底a的对数，系数2可以忽略，记做loga既是logn
线性阶：O(n)  正常的for循环
线性对数阶：O(nlogn)  n*logn
平方阶：O(n2次方) 双重for循环
立方阶：O(n3次方) 三种for循环
指数阶：O(2n次方)
阶乘阶：O(n!)

